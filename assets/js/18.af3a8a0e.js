(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{224:function(t,e,a){"use strict";a.r(e);var v=a(0),_=Object(v.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"和"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#和","aria-hidden":"true"}},[t._v("#")]),t._v(" ==和===")]),t._v(" "),a("p",[t._v("当使用这两个相等操作符时，可能会引起一些困惑。使用==时，不同类型的值也可以被看作相等。")]),t._v(" "),a("h2",{attrs:{id:"相等操作符（-）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相等操作符（-）","aria-hidden":"true"}},[t._v("#")]),t._v(" 相等操作符（==）")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类型（x）")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("类型 （y）")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("结果")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("null")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("undefined")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("true")])]),t._v(" "),a("tr",[a("td",[t._v("undefined")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("null")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("true")])]),t._v(" "),a("tr",[a("td",[t._v("数字")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("x == toNumber(y)")])]),t._v(" "),a("tr",[a("td",[t._v("字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("数字")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("toNumber(x) == y")])]),t._v(" "),a("tr",[a("td",[t._v("布尔值")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("任何类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("toNumber(x) == y")])]),t._v(" "),a("tr",[a("td",[t._v("任何类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("布尔值")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("x == toNumber(y)")])]),t._v(" "),a("tr",[a("td",[t._v("字符串或数字")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("对象")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("x == toPrimitive(y)")])]),t._v(" "),a("tr",[a("td",[t._v("对象")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("字符串或数字")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("toPrimitive(x) == y")])])])]),t._v(" "),a("p",[t._v("如果 x 和 y 是相同类型，JavaScript会比较它们的值或对象值。其他没有列在这个表格中的情况都会返回false。")]),t._v(" "),a("p",[a("code",[t._v("toNumber")]),t._v("和"),a("code",[t._v("toPrimitive")]),t._v("方法是内部的，并根据以下表格对其进行估值。")]),t._v(" "),a("p",[a("code",[t._v("toNumber")]),t._v("方法对不同类型返回的结果如下:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("值类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("结果")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("undefinded")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("NaN")])]),t._v(" "),a("tr",[a("td",[t._v("null")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("+0")])]),t._v(" "),a("tr",[a("td",[t._v("布尔值")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("如果是true，返回1；如果是false，返回+0")])]),t._v(" "),a("tr",[a("td",[t._v("数字")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("数字对应的值")])]),t._v(" "),a("tr",[a("td",[t._v("字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将字符串解析成数字，如果字符串中包含字母，返回NaN;如果是由数字组成的，转换成数字")])]),t._v(" "),a("tr",[a("td",[t._v("对象")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Number(toPrimitive(value))")])])])]),t._v(" "),a("p",[a("code",[t._v("toPrimitive")]),t._v("方法对不同类型返回的结果如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("值类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("结果")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("对象")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("如果对象的valueOf方法的结果是原始值，返回原始值。")])])])]),t._v(" "),a("p",[t._v("代码验证：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'packt'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'packt'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'packt'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),a("p",[t._v("分析"),a("code",[t._v("'packt' == true")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("首先，布尔值会被"),a("code",[t._v("toNumber")]),t._v("方法转成数字，因此得到"),a("code",[t._v("packt == 1")]),t._v(";")]),t._v(" "),a("li",[t._v("其次，用"),a("code",[t._v("toNumber")]),t._v("转换字符串值。因为字符串包含有字母，所以会被转成"),a("code",[t._v("NaN")]),t._v("，表达式就变成了"),a("code",[t._v("NaN == 1")]),t._v("，结果就是"),a("code",[t._v("false")]),t._v("。")])]),t._v(" "),a("h2",{attrs:{id:"全等操作符（-）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全等操作符（-）","aria-hidden":"true"}},[t._v("#")]),t._v(" 全等操作符（===）")]),t._v(" "),a("p",[t._v("如果比较的两个值类型不同，比较的结果就是false。如果比较的两个值类型相同，结果会根据下表判断。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类型（x）")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("值")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("结果")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("数字")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("x和y数值相同（但不是NaN）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("true")])]),t._v(" "),a("tr",[a("td",[t._v("字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("x和y是相同的字符")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("true")])]),t._v(" "),a("tr",[a("td",[t._v("布尔值")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("x和y都是true或false")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("true")])]),t._v(" "),a("tr",[a("td",[t._v("对象")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("x和y引用同一个对象")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("true")])])])])])}],!1,null,null,null);_.options.__file="equal-operator.md";e.default=_.exports}}]);