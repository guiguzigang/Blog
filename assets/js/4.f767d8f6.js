(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{182:function(t,s,a){t.exports=a.p+"assets/img/1.010d3d5b.png"},183:function(t,s,a){t.exports=a.p+"assets/img/2.dba25d03.png"},184:function(t,s,a){t.exports=a.p+"assets/img/3.98498fd6.png"},185:function(t,s,a){t.exports=a.p+"assets/img/4.28415f24.png"},186:function(t,s,a){t.exports=a.p+"assets/img/5.13eb1bed.png"},187:function(t,s,a){t.exports=a.p+"assets/img/8.816cb696.jpg"},220:function(t,s,a){"use strict";a.r(s);var n=[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"javascript-原型链"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript-原型链","aria-hidden":"true"}},[t._v("#")]),t._v(" Javascript 原型链")]),t._v(" "),n("h2",{attrs:{id:"创建对象的几种方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建对象的几种方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 创建对象的几种方法")]),t._v(" "),n("p",[t._v("在了解原型链之前，首先先了解一下创建对象的几种方式，介绍以下三种。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("  "),n("span",{attrs:{class:"token comment"}},[t._v("// 第一种方式：字面量")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o1 "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'o1'")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o2 "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Object")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'o2'")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 第二种方式：构造函数")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{attrs:{class:"token function-variable function"}},[t._v("M")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o3 "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("M")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'o3'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 第三种方式：Object.create")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'p'")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o4 "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("create")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o1"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("　　　　\n  console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o2"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o3"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o4"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("打印结果：\n")]),n("div",{attrs:{align:"center"}},[n("img",{attrs:{src:a(182)}})]),n("p"),t._v(" "),n("p",[t._v("对象是创建出来了，但你可能对结果很诧异，为什么不同呢？别急，慢慢来。")]),t._v(" "),n("h2",{attrs:{id:"原型、构造函数、实例、原型链"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原型、构造函数、实例、原型链","aria-hidden":"true"}},[t._v("#")]),t._v(" 原型、构造函数、实例、原型链")]),t._v(" "),n("p",[t._v("先来一张容易让人懵逼的图\n")]),n("div",{attrs:{align:"center"}},[n("img",{attrs:{src:a(183)}})]),n("p"),t._v(" "),n("h3",{attrs:{id:"什么是原型对象？实例？构造函数？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是原型对象？实例？构造函数？","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是原型对象？实例？构造函数？")]),t._v(" "),n("p",[t._v("概念就不多说了，看代码吧")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{attrs:{class:"token function-variable function"}},[t._v("M")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o3 "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("M")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'o3'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("ul",[n("li",[t._v("实例就是对象，在本例中"),n("code",[t._v("o3")]),t._v("就是实例，"),n("code",[t._v("M")]),t._v("就是构造函数。")]),t._v(" "),n("li",[t._v("实例通过"),n("code",[t._v("new")]),t._v("一个构造函数生成的。")]),t._v(" "),n("li",[t._v("从上图中可以知道，实例的"),n("code",[t._v("__protpo__")]),t._v("指向的是原型对象。")]),t._v(" "),n("li",[t._v("实例的构造函数的"),n("code",[t._v("prototype")]),t._v("也是指向的原型对象。")]),t._v(" "),n("li",[t._v("原型对象的"),n("code",[t._v("construor")]),t._v("指向的是构造函数。")])]),t._v(" "),n("p",[t._v("再来通过下面这个图来理解一下：\n")]),n("div",{attrs:{align:"center"}},[n("img",{attrs:{src:a(184)}})]),n("p"),t._v(" "),n("h3",{attrs:{id:"什么是原型链？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是原型链？","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是原型链？")]),t._v(" "),n("p",[t._v("简单理解就是原型组成的链，对象的"),n("code",[t._v("__proto__")]),t._v("是它的原型，而原型也是一个对象，也有"),n("code",[t._v("__proto__")]),t._v("属性，原型的"),n("code",[t._v("__proto__")]),t._v("又是原型的原型，就这样可以一直通过"),n("code",[t._v("__proto__")]),t._v("向上找，这就是原型链，当向上找找到Object的原型的时候，这条原型链就算到头了。")]),t._v(" "),n("h3",{attrs:{id:"原型对象和实例之间有什么作用？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原型对象和实例之间有什么作用？","aria-hidden":"true"}},[t._v("#")]),t._v(" 原型对象和实例之间有什么作用？")]),t._v(" "),n("p",[t._v("通过一个构造函数创建出来的多个实例，如果都要添加一个方法，给每个实例去添加并不是一个明智的选择。这时就该用上原型了。")]),t._v(" "),n("p",[t._v("在实例的原型上添加一个方法，这个原型的所有实例便都有了这个方法。")]),t._v(" "),n("p",[t._v("接着上面的例子继续演示：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{attrs:{class:"token function-variable function"}},[t._v("M")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o3 "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("M")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'o3'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o5 "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("M")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\no3"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("say"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token function"}},[t._v("furnction")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'hello world'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\no3"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("say")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// hello world")]),t._v("\no5"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("say")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// hello world")]),t._v("\n")])])]),n("p",[t._v("按照JS引擎的分析方式，在访问一个实例的属性的时候，现在实例本身中找，如果没找到就去它的原型中找，还没找到就再往上找，直到找到Object的原型，这就是原型链。")]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("注意：")]),t._v(" "),n("p",[t._v("只有函数有[prototype],对象是没有的，但是函数也是有"),n("code",[t._v("__proto__")]),t._v("的，因为函数也是对象。函数的"),n("code",[t._v("__proto__")]),t._v("指向的是"),n("code",[t._v("Function.prototype")]),t._v("，也就是说普通函数是"),n("code",[t._v("Function")]),t._v("这个构造函数的一个实例。")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("  "),n("span",{attrs:{class:"token constant"}},[t._v("M")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),n("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" Function"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype  "),n("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),n("h2",{attrs:{id:"instanceof的原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#instanceof的原理","aria-hidden":"true"}},[t._v("#")]),t._v(" instanceof的原理")]),t._v(" "),n("div",{attrs:{align:"center"}},[n("img",{attrs:{src:a(185)}})]),t._v(" "),n("p",[t._v("instanceof是判断实例对象的"),n("code",[t._v("__proto__")]),t._v("和生成该实例的构造函数的"),n("code",[t._v("prototype")]),t._v("是不是引用的同一个地址,是返回"),n("code",[t._v("true")]),t._v("，否返回"),n("code",[t._v("false")]),t._v("。")]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("注意：")]),t._v(" "),n("p",[t._v("实例的"),n("code",[t._v("instanceof")]),t._v("在比较的时候，与原型链上向上找的的构造函数相比都是"),n("code",[t._v("true")]),t._v("。")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("o3"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),n("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{attrs:{class:"token constant"}},[t._v("M")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype                  "),n("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\no3 "),n("span",{attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("M")]),t._v("                               "),n("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),n("span",{attrs:{class:"token constant"}},[t._v("M")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),n("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" Object"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype    "),n("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\no3 "),n("span",{attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Object")]),t._v("                          "),n("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),n("p",[t._v("那怎么判断实例是由哪个构造函数生成的呢？这时候就要用到"),n("code",[t._v("constructor")]),t._v("了。\n实例的原型的构造函数， "),n("code",[t._v("obj.__proto__.constructor")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("o3"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),n("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{attrs:{class:"token constant"}},[t._v("M")]),t._v("        "),n("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\no3"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),n("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" Object   "),n("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),n("h2",{attrs:{id:"new运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#new运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" new运算符")]),t._v(" "),n("p",[n("strong",[t._v("new运算符的原理")])]),t._v(" "),n("ul",[n("li",[t._v("一个新对象被创建。它继承自"),n("code",[t._v("foo.prototype")]),t._v("。")]),t._v(" "),n("li",[t._v("构造函数返回一个对象。在执行的时候，相应的传参会被传入，同时上下文"),n("code",[t._v("this")]),t._v("会被指定为这个新的实例。")]),t._v(" "),n("li",[n("code",[t._v("new foo")]),t._v("等同于"),n("code",[t._v("new foo()")]),t._v(", 只能用在不传递任何参数的情况。")]),t._v(" "),n("li",[t._v("如果构造函数返回了一个对象，那个这个对象会取代整个"),n("code",[t._v("new")]),t._v("出来的结果。如果构造函数没有返回对象，那个"),n("code",[t._v("new")]),t._v("出来的结果为步骤1创建的对象。")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{attrs:{class:"token function-variable function"}},[t._v("new2")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("func"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("create")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("func"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 　　  "),n("span",{attrs:{class:"token comment"}},[t._v("//创建对象")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" k "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" func"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("call")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("　　　　　　　　　　　　　"),n("span",{attrs:{class:"token comment"}},[t._v("//改变this指向，把结果付给k")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" k "),n("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'object'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("　　　　　　　　　"),n("span",{attrs:{class:"token comment"}},[t._v("//判断k的类型是不是对象")]),t._v("\n      "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" k"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("　　　　　　　　　　　　　　　　　 "),n("span",{attrs:{class:"token comment"}},[t._v("//是，返回k")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" o"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("　　　　　　　　　　　　　　　　　 "),n("span",{attrs:{class:"token comment"}},[t._v("//不是返回返回构造函数的执行结果")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("   \n")])])]),n("div",{attrs:{align:"center"}},[n("img",{attrs:{src:a(186)}})]),t._v(" "),n("p",[t._v("经过上图一系列折腾，不难看出，我们手动编写的new2和new运算符的作用是一样的。")]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("总结：")]),t._v(" "),n("p",[t._v("函数的原型对象"),n("code",[t._v("constructor")]),t._v("默认指向函数本身，原型对象除了有原型属性外，为了实现继承，还有一个原型链指针"),n("code",[t._v("__proto__")]),t._v("，该指针指向上一层的原型对象，而上一层的原型对象的结构依然类似，这样利用"),n("code",[t._v("__proto__")]),t._v("一直指向"),n("code",[t._v("Object")]),t._v("的原型对象上，而"),n("code",[t._v("Object")]),t._v("的原型对象用"),n("code",[t._v("Object.prototype.__proto__ = null")]),t._v("表示原型链的最顶端，如此变形成了"),n("code",[t._v("javascript")]),t._v("的原型链继承，同时也解释了为什么所有的"),n("code",[t._v("javascript")]),t._v("对象都具有"),n("code",[t._v("Object")]),t._v("的基本方法。")])]),t._v(" "),n("p",[t._v("最后再来看一张图，再来理解一下JS的原型：\n")]),n("div",{attrs:{align:"center"}},[n("img",{attrs:{src:a(187)}})]),n("p")])}],o=a(0),_=Object(o.a)({},function(){this.$createElement;this._self._c;return this._m(0)},n,!1,null,null,null);_.options.__file="prototype.md";s.default=_.exports}}]);